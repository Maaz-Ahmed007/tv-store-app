generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

// model User {
//   id           String  @id
//   username     String  @unique
//   displayName  String
//   email        String  @unique
//   passwordHash String?

//   session Session[]

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Session {
//   id        String   @id
//   userId    String
//   expiresAt DateTime

//   User User @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

model Product {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?
  price       Float
  cost        Float
  quantity    Int     @default(5)
  // sold        Int     @default(0) Removed Sold for now

  SaleItem SaleItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Customer {
  id    String  @id @default(uuid())
  name  String
  phone String?

  sales        Sale[]
  transactions Transaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sale {
  id          String     @id @default(uuid())
  customerId  String
  customer    Customer   @relation(fields: [customerId], references: [id])
  items       SaleItem[]
  totalAmount Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SaleItem {
  id        String  @id @default(uuid())
  saleId    String
  sale      Sale    @relation(fields: [saleId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id          String   @id @default(uuid())
  customerId  String
  customer    Customer @relation(fields: [customerId], references: [id])
  type        String // "credit" or "debit"
  amount      Float
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model Expense {
//   id      String   @id @default(uuid())
//   details String?
//   amount  Float
//   date    DateTime @default(now())

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }
