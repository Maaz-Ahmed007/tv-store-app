generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id           String  @id
  username     String  @unique
  displayName  String
  email        String  @unique
  passwordHash String?

  session Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  User User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Product {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?
  price       Float
  cost        Float
  quantity    Int     @default(0)
  sold        Int     @default(0)

  sales Sale[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Customer {
  id    String  @id @default(uuid())
  name  String
  phone String?

  sales Sale[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sale {
  id          String   @id @default(uuid())
  customerId  String
  customer    Customer @relation(fields: [customerId], references: [id])
  productId   String
  product     Product  @relation(fields: [productId], references: [id])
  quantity    Int
  totalAmount Float

  payments Payment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sales")
}

model Payment {
  id     String   @id @default(uuid())
  saleId String
  sale   Sale     @relation(fields: [saleId], references: [id], onDelete: Cascade)
  amount Float
  date   DateTime @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("payments")
}

model Expense {
  id      String   @id @default(uuid())
  details String?
  amount  Float
  date    DateTime @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("expenses")
}
